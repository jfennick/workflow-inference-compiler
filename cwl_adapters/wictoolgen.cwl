#!/usr/bin/env cwl-runner
# NOTE: This does not work with toil-cwl-runner due to a pickling bug:
# "Can't pickle local object 'Loader.__init__.<locals>.<lambda>'"
# See https://github.com/common-workflow-language/cwltool/blob/main/docs/processgen.rst
cwlVersion: v1.2
$namespaces:
  cwltool: "http://commonwl.org/cwltool#"
class: cwltool:ProcessGenerator
requirements:
  InlineJavascriptRequirement: {}
inputs:
  yaml:
    type: File
  homedir: # Filled in automatically by wic
    type: string
# NOTE: This is just a minimal template; additional inputs can be added
# by using --inline_inputs_file and/or explicitly in the parent yml file,
# which then get added when the parent workflow gets compiled.
outputs: {}
# NOTE: There does not appear to be any way to return outputs.
run:
  class: CommandLineTool
  inputs:
    yaml:
      type: File
  outputs:
    # NOTE: runProcess and runInputs are hardcoded in the cwltool source code.
    # (in the result() function in procgenerator.py)
    # All other outputs are ignored by the CommandLineTool,
    # but NOT by the parent Workflow.
    runProcess:
      type: File
      outputBinding:
        glob: autogenerated/$(inputs.yaml.nameroot).cwl
    # Alternatively, instead of using runInputs, --inline_inputs_file can be used below.
    runInputs:
      type: Any
      outputBinding:
        glob: autogenerated/$(inputs.yaml.nameroot)_inputs.yml
        loadContents: true
        outputEval: $(JSON.parse(self[0].contents))
  requirements:
    InlineJavascriptRequirement: {}
    InitialWorkDirRequirement:
      listing:
        - $(inputs.yaml)
  arguments: ["wic", "--yaml", $(inputs.yaml), "--homedir", $(inputs.homedir)] # "--inline_inputs_file"
